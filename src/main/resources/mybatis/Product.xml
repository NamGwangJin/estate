<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
         "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.real.estate.DAO.ProductDAO">
    <insert id='product_insert' useGeneratedKeys="true" keyColumn="product_id" keyProperty="product_id" parameterType="com.real.estate.DTO.ProductDTO">
        <!-- 기존의 product_insert 쿼리 -->
        insert into products set 
        product_type=#{param1}, 
        location=#{param2}, 
        building_name=#{param3}, 
        building_use=#{param4}, 
        extent=#{param5}, 
        address=#{param6}, 
        floor=#{param7}, 
        floor_open=#{param8}, 
        direction_criteria=#{param9}, 
        direction=#{param10}, 
        entrance=#{param11}, 
        rooms=#{param12}, 
        bathroom=#{param13}, 
        roomuse=#{param14}, 
        inner_structure=#{param15},
        administration_cost=#{param16}, 
        maintenance=#{param17}, 
        managementCost_includ=#{param18}, 
        building_dateType=#{param19}, 
        building_date=#{param20}, 
        transactionType=#{param21}, 
        desiredAmount=#{param22}, 
        loan=#{param23}, 
        existingTenant_deposit=#{param24}, 
        existingTenant_monthlyRent=#{param25},
        total_parking=#{param26}, 
        parking_per_room=#{param27}, 
        heating_method=#{param28}, 
        heating_fuel=#{param29}, 
        airCondition=#{param30}, 
        living_facilities=#{param31}, 
        security_facilities=#{param32}, 
        other_facilities=#{param33}, 
        balcony=#{param34}, 
        moveable_date=#{param35}, 
        product_title=#{param36}, 
        product_content=#{param37},
        created=now();

        <!-- product_id를 즉시 가져오기 위해 selectKey를 사용 -->
        <selectKey keyProperty="product_id" order="AFTER" resultType="int">
            SELECT LAST_INSERT_ID() as product_id;
        </selectKey>
    </insert>
    <select id="getLastInsertedProductId" resultType="int">
        SELECT LAST_INSERT_ID() as product_id
    </select>

<!-- product_id를 사용하여 image_insert 쿼리 수행 -->
<insert id='image_insert' parameterType="com.real.estate.DTO.ProductDTO">
    INSERT INTO products_img (img_productID, img_title) 
    VALUES (#{product_id}, #{img_title});
</insert>

<select id="getEstateDetail">
select * from products where product_id=#{param1};
</select>

<!-- 법정동 코드 SELECT -->
<select id="getBjdCode">
select bjd_code from bjd where bjd_name=#{param1};
</select>

<!-- <select id="getProducts" resultType="com.real.estate.DTO.ProductDTO">
SELECT
  p.*,
  pi.img_no,
  pi.img_title
  FROM
  products p
LEFT JOIN
  (
    SELECT
      img_productID,
      MIN(img_no) AS min_img_no
    FROM
      products_img
    GROUP BY
      img_productID
  ) AS min_img
ON
  p.product_id = min_img.img_productID
LEFT JOIN
  products_img pi
ON
  min_img.img_productID = pi.img_productID
  AND min_img.min_img_no = pi.img_no;
</select> -->

<select id="getProducts" resultType="com.real.estate.DTO.ProductDTO" parameterType="java.util.Map">
  SELECT
    p.*,
    pi.img_no,
    pi.img_title
  FROM
    products p
  LEFT JOIN
    (
      SELECT
        img_productID,
        MIN(img_no) AS min_img_no
      FROM
        products_img
      GROUP BY
        img_productID
    ) AS min_img
  ON
    p.product_id = min_img.img_productID
  LEFT JOIN
    products_img pi
  ON
    min_img.img_productID = pi.img_productID
    AND min_img.min_img_no = pi.img_no
  WHERE
    <!-- transactionType이 선택된 경우 -->
    <if test="transactionType != null and transactionType != ''">
      p.transactionType = #{transactionType}
    </if>
    <!-- productType이 선택된 경우 -->
    <if test="productType != null and productType != ''">
      <if test="transactionType != null and transactionType != ''">AND</if>
      p.product_type = #{productType}
    </if>
</select>
</mapper>
